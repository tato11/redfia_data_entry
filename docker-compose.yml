version: "3.3"

services:
  rails:
    build:
      context: "${PWD}/docker/build/rails"
      dockerfile: dockerfile
    image: redfia_data_entry_website
    secrets:
      - db_user
      - db_pass
      - app_secret_key
    environment:
      ENV: "${ENV}"
      EXEC_TEST: "${EXEC_TEST}"
      DB_HOST: db
      DB_NAME: redfia_data_entry
      DB_USER_FILE: /run/secrets/db_user
      DB_PASS_FILE: /run/secrets/db_pass
      APP_SECRET_KEY_FILE: /run/secrets/app_secret_key
    depends_on:
      - db
    volumes:
      - rails_volume:/var/www/html
    networks:
      - rails_network
    links:
      - db
    deploy:
      #replicas: 2
      #update_config:
      #  parallelism: 2
      restart_policy:
        condition: on-failure
  db:
    image: mysql:5.7
    secrets:
      - db_user
      - db_pass
    environment:
      MYSQL_RANDOM_ROOT_PASSWORD: "yes"
      MYSQL_DATABASE: redfia_data_entry
      MYSQL_USER_FILE: /run/secrets/db_user
      MYSQL_PASSWORD_FILE: /run/secrets/db_pass
    volumes:
      - db_volume:/var/lib/mysql
      - db_seed_volume:/docker-entrypoint-initdb.d
    networks:
      - rails_network
    # ports:
    #   - 3306:3306
    deploy:
      restart_policy:
        condition: on-failure
      placement:
        constraints: [node.role == manager]
  web:
    image: nginx
    depends_on:
      - rails
    environment:
      ENV: "${ENV}"
    volumes:
      - "${PWD}/docker/web:/etc/nginx/conf.d"
      - rails_volume:/var/www/html
    networks:
      - rails_network
    ports:
      - 8080:80
    links:
      - rails
    command: /bin/bash -c "if [ \"$ENV\" == \"dev\" ]; then cp /etc/nginx/conf.d/site_config_dev.conf.template /etc/nginx/conf.d/default.conf; else cp /etc/nginx/conf.d/site_config_prod.conf.template /etc/nginx/conf.d/default.conf; fi; nginx -g 'daemon off;'"
    deploy:
      restart_policy:
        condition: on-failure

volumes:
  rails_volume:
    driver_opts:
      type: none
      device: "${PWD}"
      o: bind
  db_volume:
    external: true
  db_seed_volume:
    driver_opts:
      type: none
      device: "${PWD}/docker/db/seeds"
      o: bind

networks:
  rails_network:

secrets:
  db_user:
    file: "${PWD}/docker/secrets/db_user.txt"
  db_pass:
    file: "${PWD}/docker/secrets/db_pass.txt"
  app_secret_key:
    file: "${PWD}/docker/secrets/app_secret_key.txt"
